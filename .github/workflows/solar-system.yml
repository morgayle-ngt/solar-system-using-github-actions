name: Solar System Workflow

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'

env:
    MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
    MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
    MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

jobs:
    unit-testing:
      name: Unit Testing
      # services:
      #   mongo-db:
      #     image: ${{ vars.DOCKERHUB_USERNAME }}/mongo-db:non-prod
      #     ports:
      #       - 27017:27017
      # env:
      #     MONGO_URI: 'mongodb//localhost:27017/superData'
      #     MONGO_USERNAME: non-prod-user
      #     MONGO_PASSWORD: non-prod-password
      strategy:
        matrix:
            nodejs_version: [18, 19, 20]
            operating_system: [ubuntu-latest, macos-latest]
            exclude:
                - nodejs_version: 18
                  operating_system: macos-latest
      runs-on: ${{ matrix.operating_system }}
      steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup NodeJS Version - ${{ matrix.nodejs_version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.nodejs_version }}

      - name: Cache NPM dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}

      - name: Install Dependencies
        run: npm install

      - name: Unit Testing
        run: npm test

      - name: Archive Test Results
        uses: actions/upload-artifact@v3
        with:
          name: Mocha-Test-Results
          path: test-results.xml

    code-coverage:
      name: Code Coverage
      # container:
      #   image: node:18
      runs-on: ubuntu-latest
      steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup NodeJS Version - 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache NPM dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}

      - name: Install Dependencies
        run: npm install

      - name: Unit Testing
        id: nodejs-unit-testing-step
        run: npm test

      - name: Check Code Coverage
        continue-on-error: true
        run: npm run coverage

      - name: Archive Test Result
        if: always ()
        uses: actions/upload-artifact@v3
        with:
          name: Code-Coverage-Result
          path: coverage
          retention-days: 5

    docker:
      name: Containerization
      needs: [unit-testing, code-coverage]
      permissions: 
        packages: write
      runs-on: ubuntu-latest
      steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Dockerhub Login
        uses: docker/login-action@v3 #updated
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }} #updated

      - name: GHCR Login
        uses: docker/login-action@v3 #updated
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }} #updated

      - name: Pull Docker Image #added
        run: docker pull ${{ vars.DOCKERHUB_USERNAME }}/solar-system:latest #added

      - name: Docker Build For Testing
        uses: docker/build-push-action@v5 #updated
        with:
          context: .
          push: false
          tags: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}

      # Comment to trigger workflow

      - name: Docker Image Testing
        run: |
          docker images
          docker run --name solar-system -d \
               -p 3000:3000 \
               -e MONGO_URI=$MONGO_URI \
               -e MONGO_USERNAME=$MONGO_USERNAME \
               -e MONGO_PASSWORD=$MONGO_PASSWORD \
               ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
              
          export IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system)
          echo $IP

          echo Testing Image URL using wget
          wget -q -O - 127.0.0.1:3000/live | grep live

      # - name: Docker Push
      #   uses: docker/build-push-action@v5 #updated
      #   with:
      #     context: .
      #     push: true
      #     tags: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}

      - name: Container Registry Push
        uses: docker/build-push-action@v5 #updated
        with:
          context: .
          push: true
          tags: |
              ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
              ghcr.io/${{ github.repository_owner }}/solar-system:${{ github.sha }}

# Comment to trigger workflow again